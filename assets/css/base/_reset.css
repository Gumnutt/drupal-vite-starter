@layer reset{
@media (prefers-reduced-motion: no-preference) {
  :where(html) {
    scroll-behavior: smooth;
  }
}
@media (prefers-reduced-motion: no-preference) {
  :where(:focus-visible) {
    transition: outline-offset 145ms cubic-bezier(0.25, 0, 0.4, 1);
  }
  :where(:not(:active):focus-visible) {
    transition-duration: 0.25s;
  }
}
@supports (-moz-appearance: none) {
  :where(a, u, ins, abbr) {
    text-underline-offset: 2px;
  }
}
:where(html) {
  font-family: var(--font-sans);
  line-height: var(--font-lineheight-3);
  -webkit-text-size-adjust: none;
  block-size: 100%;
  color-scheme: light;
}
*,
:after,
:before {
  box-sizing: border-box;
}
:where(:not(dialog)) {
  margin: 0;
}
:where(:not(fieldset, progress, meter)) {
  border-width: 0;
  border-style: solid;
  background-repeat: no-repeat;
  background-origin: border-box;
}
:where(:not(:active):focus-visible) {
  outline-offset: 5px;
}
:where(body) {
  min-block-size: 100%;
}
:where(h3, h4, h5, h6, dt) {
  max-inline-size: var(--size-header-3);
}
:where(a, u, ins, abbr) {
  text-underline-offset: 1px;
}
:where(
    a[href],
    area,
    button,
    input:not(
        [type="text"],
        [type="email"],
        [type="number"],
        [type="password"],
        [type=""],
        [type="tel"],
        [type="url"]
      ),
    label[for],
    select,
    summary,
    [tabindex]:not([tabindex*="-"])
  ) {
  cursor: pointer;
}
:where(
    a[href],
    area,
    button,
    input,
    label[for],
    select,
    summary,
    textarea,
    [tabindex]:not([tabindex*="-"])
  ) {
  -webkit-tap-highlight-color: transparent;
  touch-action: manipulation;
}
:where(a):where(:not(:hover)) {
  text-decoration: inherit;
}
:where(img, svg, video, canvas, audio, iframe, embed, object) {
  display: block;
}
:where(img, svg, video) {
  block-size: auto;
  max-inline-size: 100%;
}
:where(input, button, textarea, select),
:where(input[type="file"])::-webkit-file-upload-button {
  font-size: inherit;
  letter-spacing: inherit;
  color: inherit;
  font: inherit;
}
::placeholder {
  opacity: 0.75;
}
:where(input:not([type="range"]), textarea) {
  padding-block: var(--size-1);
  padding-inline: var(--size-2);
}
:where(select) {
  padding-block: 0.75ch;
  padding-inline: 1.25ch 0;
}
:where(
    textarea,
    select,
    input:not([type="button"], [type="submit"], [type="reset"])
  ) {
  border-radius: var(--radius-2);
}
:where(textarea) {
  resize: block;
}
:where(input[type="checkbox"], input[type="radio"]) {
  block-size: var(--size-3);
  inline-size: var(--size-3);
}
:where(svg:not([width])) {
  inline-size: var(--size-10);
}
:where(h1, h2, h3, h4, h5, h6, p, a, span, li) {
  font-family: var(--font-sans);
}
:where(code, kbd, samp, pre),
:where(pre > span) {
  font-family: var(--font-mono);
}
:where(:not(pre) > code, kbd) {
  white-space: nowrap;
}
:where(pre) {
  max-inline-size: max-content;
  min-inline-size: 0;
  white-space: pre;
  writing-mode: lr;
}
:where(:not(pre) > code) {
  border-radius: var(--radius-2);
  padding: var(--size-1) var(--size-2);
  writing-mode: lr;
}
:where(kbd, var) {
  border-radius: var(--radius-2);
  padding: var(--size-1) var(--size-2);
}
:where(mark) {
  border-radius: var(--radius-2);
  padding-inline: var(--size-1);
}
:where(ol, ul) {
  padding-inline-start: var(--size-8);
}
:where(li) {
  padding-inline-start: var(--size-2);
}
:where(li, dd, figcaption) {
  max-inline-size: var(--size-content-2);
}
:where(p) {
  text-wrap: pretty;
}
:where(dt, summary) {
  font-weight: var(--font-weight-7);
}
:where(dt:not(:first-of-type)) {
  margin-block-start: var(--size-5);
}
:where(small) {
  font-size: max(0.5em, var(--font-size-0));
  max-inline-size: var(--size-content-1);
}
:where(hr) {
  height: var(--border-size-2);
  margin-block: var(--size-fluid-5);
}
:where(figure) {
  display: grid;
  gap: var(--size-2);
  place-items: center;
}
:where(figure) > :where(figcaption) {
  font-size: var(--font-size-1);
}
:where(blockquote) {
  display: grid;
  padding-block: var(--size-3);
  padding-inline: var(--size-4);
  gap: var(--size-3);
  max-inline-size: var(--size-content-2);
}
:where(:not(blockquote) > cite) {
  padding-inline-start: var(--size-2);
}
:where(summary) {
  margin: calc(var(--size-2) * -1) calc(var(--size-3) * -1);
  border-radius: var(--radius-2);
  padding: var(--size-2) var(--size-3);
}
:where(details) {
  border-radius: var(--radius-2);
  padding-block: var(--size-2);
  padding-inline: var(--size-3);
}
:where(details[open] > summary) {
  margin-bottom: var(--size-2);
  border-end-end-radius: 0;
  border-end-start-radius: 0;
}
:where(fieldset) {
  border: var(--border-size-1) solid var(--surface-4);
  border-radius: var(--radius-2);
}
:where(abbr) {
  background-color: var(--blue-300);
  text-decoration-color: var(--white);
}
:where(dialog) {
  border-radius: var(--radius-3);
  color: inherit;
}
:where(dialog)::backdrop {
  backdrop-filter: blur(25px);
}
:where(html[\:has\(dialog\[open\]\)]) {
  overflow: hidden;
}
:where(html:has(dialog[open])) {
  overflow: hidden;
}
:where(menu) {
  display: flex;
  padding-inline-start: 0;
  gap: var(--size-3);
}
:where(sup) {
  font-size: 0.5em;
}
}